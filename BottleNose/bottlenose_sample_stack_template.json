{
  "Description": "CloudFormation template for creating an ec2 instance",
  "Parameters": {
    "ChallengeIdParameter": {
      "Type": "String",
      "Description": "ChallengeId of the challenge for which the stack is being provisioned."
    },
    "AttemptIdParameter": {
      "Type": "String",
      "Description": "AttemptID of the attempt for which the stack is being provisioned."
    },
    "UserAliasParameter": {
      "Type": "String",
      "Description": "Alias of the user for whom the stack is being provisioned."
    },
    "RegionParameter": {
      "Type": "String",
      "Description": "Region where this template will be run and resources will be provisioned"
    },
    "InstanceType": {
      "Description": "Select one of the possible instance types",
      "Type": "String",
      "Default": "t2.micro"
    },
    "Route53HostedZoneIDParameter": {
      "Type": "String",
      "Description": "Hosted Zone ID of the zone where you can create sub-domains"
    },
    "AcmCertARNParameter": {
      "Type": "String",
      "Description": "ARN of the wildcard ACM cert which can be used with the sub-domain"
    },
    "S3BucketNameParameter": {
      "Type": "String",
      "Description": "Name of the S3 bucket which you should use"
    },
    "S3PrefixNameParameter": {
      "Type": "String",
      "Description": "Folder in the S3 bucket where you can write into"
    },
    "ConsoleAccessPasswordParameter": {
      "Type": "String",
      "Description": "Password for the user who wishes to access the console. Default is myP@ssW0rd."
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.0.0.0/24",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "SubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet"
        },
        "RouteTableId": {
          "Ref": "RouteTable"
        }
      }
    },
    "NetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "InboundIPV4NetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "OutBoundIPV4NetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "SubnetNetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet"
        },
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      }
    },
    "IPAddress": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": "AttachGateway",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": {
          "Ref": "Server"
        }
      }
    },
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Enable SSH access via port 22",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "NHTLABSSMRoleforEC2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
        ]
      }
    },
    "NHTLABSSMInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "NHTLABSSMRoleforEC2"
          }
        ]
      }
    },
    "Server": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": "ami-0008f34bf5ac8be4e",
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroupIds": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "Subnet"
        },
        "KeyName": {
          "Fn::GetAtt": [
            "NHTLABEC2KeyPair",
            "KeyName"
          ]
        },
        "IamInstanceProfile": {
          "Ref": "NHTLABSSMInstanceProfile"
        }
      }
    },
    "NHTLABEC2KeyPair": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Version": "1.0",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "NHTLABEC2KeyPairFunction",
            "Arn"
          ]
        },
        "challengeId": {
          "Ref": "ChallengeIdParameter"
        },
        "user": {
          "Ref": "UserAliasParameter"
        },
        "attemptId": {
          "Ref": "AttemptIdParameter"
        }
      }
    },
    "NHTLABEC2KeyPairFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "warbase-us-east-1",
          "S3Key": "keypaircode/customkeypair.zip"
        },
        "Handler": {
          "Fn::Join": [
            "",
            [
              "lambda_function",
              ".lambda_handler"
            ]
          ]
        },
        "Runtime": "python3.6",
        "Timeout": "30",
        "Role": {
          "Fn::GetAtt": [
            "NHTLABLambdaExecutionRole",
            "Arn"
          ]
        }
      }
    },
    "NHTLABLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "InstanceId": {
      "Description": "InstanceId of the newly created instance",
      "Value": {
        "Ref": "Server"
      }
    },
    "PublicName": {
      "Value": {
        "Fn::GetAtt": [
          "Server",
          "PublicIp"
        ]
      },
      "Description": "Public name (connect via SSH)"
    },
    "InstancePrivateKey": {
      "Description": "The private key of the EC2 instance",
      "Value": {
        "Fn::GetAtt": [
          "NHTLABEC2KeyPair",
          "KeyContent"
        ]
      }
    }
  }
}